name: Build geo + Jekyll â†’ Deploy to Cloudflare Pages

on:
  push:
    branches: [main] # change if your default branch differs
  workflow_dispatch: {} # allow manual runs

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Geo toolchain for your preprocessing ---
      - name: Install geospatial dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tippecanoe gdal-bin libproj-dev libgeos-dev imagemagick

      # --- Ruby/Jekyll build ---
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true

      - name: Install Ruby dependencies
        run: bundle install

      - name: Build data
        env:
          JEKYLL_ENV: production
          BUNDLE_WITHOUT: development:test
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
        run: |
          bundle exec rake build

      - name: Build Jekyll
        env:
          JEKYLL_ENV: production
          BUNDLE_WITHOUT: development:test
        run: |
          bundle exec jekyll build -s . -d _site

      - name: Upload PMTiles to R2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: auto # R2 uses 'auto'
          AWS_EC2_METADATA_DISABLED: "true" # avoid IMDS lookups
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
        run: |
          ENDPOINT="https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com"
          shopt -s nullglob
          for f in _site/assets/data/*.pmtiles; do
            aws s3 cp "$f" "s3://${R2_BUCKET}/$(basename "$f")" \
              --endpoint-url "$ENDPOINT" \
              --content-type "application/vnd.pmtiles" \
              --content-encoding "identity" \
              --cache-control "public, max-age=31536000, immutable" \
              --metadata-directive REPLACE
          done

      # (Optional) Upload artifact for debugging
      - name: Archive site artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: _site

      # --- Deploy to Cloudflare Pages ---
      - name: Install Wrangler
        run: npm i -g wrangler

      - name: Deploy to Cloudflare Pages (production)
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_PAGES_PROJECT: ${{ secrets.CF_PAGES_PROJECT }}
        run: |
          wrangler pages deploy _site \
            --project-name "$CF_PAGES_PROJECT" \
            --branch main

      # (Optional) Warm critical pages to fill edge cache quickly
      - name: Warm edge cache (optional)
        run: |
          urls=(
            "https://www.viver-lisboa.org/"
            "https://www.viver-lisboa.org/freguesias/arroios/"
          )
          for u in "${urls[@]}"; do
            curl -sS -L -o /dev/null "$u" || true
          done
